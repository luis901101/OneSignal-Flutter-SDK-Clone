group 'com.onesignal.flutter'
version '2.6.1'

buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}

rootProject.allprojects {
    repositories {
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    lintOptions {
        disable 'InvalidPackage'
    }
}

dependencies {
//    api 'com.onesignal:OneSignal:3.15.3'
//    api 'com.github.luis901101:OneSignal-Android-SDK:3.15.3'
    api 'com.github.luis901101:OneSignal-Android-SDK:custom-base-url-SNAPSHOT'
    api 'com.google.firebase:firebase-iid' // This dependency here is to fix a problem with Firebase Cloud Message library used by android for push notifications... for more info check this (https://stackoverflow.com/questions/68320549/flutter-java-lang-noclassdeffounderror-failed-resolution-of-lcom-google-fireb)
}

// Adds required manifestPlaceholders keys to allow mainifest merge gradle step to complete
// The OneSignal app id should be set in your JS code.
// Google project number / FCM Sender ID will be pulled in from the OneSignal dashbaord
class DefaultManifestPlaceHolders {
    static final MANIFEST_PLACEHOLDERS_DEFAULTS = [
        onesignal_app_id: '${onesignal_app_id}',
        onesignal_google_project_number: '${onesignal_google_project_number}'
    ]

    static void addManifestToAppProject(Project proj) {
        def androidApp = proj.android
        MANIFEST_PLACEHOLDERS_DEFAULTS.each { defKey, defValue ->
            if (!androidApp.defaultConfig.manifestPlaceholders.containsKey(defKey)) {
                androidApp.defaultConfig.manifestPlaceholders[defKey] = defValue

                androidApp.buildTypes.each { buildType ->
                    if (!buildType.manifestPlaceholders.containsKey(defKey))
                        buildType.manifestPlaceholders[defKey] = defValue
                }
            }
        }
    }
}

rootProject.childProjects.each { projName, proj ->
    if (projName != 'app' && projName != 'onesignal_flutter')
        return

    if (proj.hasProperty('android')) {
        DefaultManifestPlaceHolders.addManifestToAppProject(proj)
        return
    }

    proj.afterEvaluate {
        DefaultManifestPlaceHolders.addManifestToAppProject(proj)
    }
}
